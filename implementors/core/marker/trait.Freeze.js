(function() {var implementors = {};
implementors["eventually_app_example"] = [{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for TotalOrdersProjection","synthetic":true,"types":[]},{"text":"impl Freeze for OrderItem","synthetic":true,"types":[]},{"text":"impl Freeze for OrderItems","synthetic":true,"types":[]},{"text":"impl Freeze for Order","synthetic":true,"types":[]},{"text":"impl Freeze for OrderAggregate","synthetic":true,"types":[]},{"text":"impl Freeze for OrderState","synthetic":true,"types":[]},{"text":"impl Freeze for OrderCommand","synthetic":true,"types":[]},{"text":"impl Freeze for OrderEvent","synthetic":true,"types":[]},{"text":"impl Freeze for OrderError","synthetic":true,"types":[]}];
implementors["eventually_core"] = [{"text":"impl&lt;T&gt; Freeze for AggregateRootBuilder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for AggregateRoot&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Aggregate&gt;::Id: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Aggregate&gt;::State: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, Store&gt; Freeze for Repository&lt;T, Store&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Store: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A, S&gt; Freeze for Error&lt;A, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SourceId, T&gt; Freeze for Persisted&lt;SourceId, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SourceId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Select","synthetic":true,"types":[]},{"text":"impl Freeze for Expected","synthetic":true,"types":[]},{"text":"impl&lt;SourceId, T&gt; Freeze for EventBuilder&lt;SourceId, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SourceId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SourceId, T&gt; Freeze for EventBuilderWithVersion&lt;SourceId, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SourceId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;SourceId, T&gt; Freeze for EventBuilderWithSequenceNumber&lt;SourceId, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SourceId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Store, Subscriber&gt; Freeze for Transient&lt;Store, Subscriber&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Store: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Subscriber: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["eventually_postgres"] = [{"text":"impl Freeze for EventStoreBuilder","synthetic":true,"types":[]},{"text":"impl&lt;Tls&gt; Freeze for EventStoreBuilderMigrated&lt;Tls&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Id, Event, Tls&gt; Freeze for EventStore&lt;Id, Event, Tls&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for DeserializeError","synthetic":true,"types":[]},{"text":"impl&lt;Id, Event&gt; Freeze for EventSubscriber&lt;Id, Event&gt;","synthetic":true,"types":[]},{"text":"impl&lt;SourceId, Event, Tls&gt; Freeze for PersistentBuilder&lt;SourceId, Event, Tls&gt;","synthetic":true,"types":[]},{"text":"impl&lt;SourceId, Event, Tls&gt; !Freeze for Persistent&lt;SourceId, Event, Tls&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
implementors["eventually_redis"] = [{"text":"impl&lt;Id, Event&gt; Freeze for EventStore&lt;Id, Event&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Id, Event&gt; Freeze for EventSubscriber&lt;Id, Event&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Id, Event&gt; Freeze for PersistentSubscription&lt;Id, Event&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Builder","synthetic":true,"types":[]},{"text":"impl Freeze for BuilderWithSourceName","synthetic":true,"types":[]},{"text":"impl Freeze for StoreError","synthetic":true,"types":[]},{"text":"impl Freeze for SubscriberError","synthetic":true,"types":[]},{"text":"impl Freeze for SubscriptionError","synthetic":true,"types":[]}];
implementors["eventually_util"] = [{"text":"impl&lt;P, S&gt; Freeze for Projector&lt;P, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ConflictError","synthetic":true,"types":[]},{"text":"impl Freeze for SubscriberError","synthetic":true,"types":[]},{"text":"impl Freeze for EventStoreBuilder","synthetic":true,"types":[]},{"text":"impl&lt;Id, Event&gt; Freeze for EventStore&lt;Id, Event&gt;","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for AsAggregate&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()